local color = require "color.color"
local cmath = require "color.math"

return function()
	describe("Hex Tests", function()
		test("convert from hex", function()
			local red = vmath.vector4(1, 0, 0, 1)
			local red_hex = color.from_hex("#ff0000")
			assert(red == red_hex, "Hex convertion failed")
		end)
		test("convert to hex", function()
			local red = color.to_hex(color.from_hex("#ff0000"))
			assert(red == "#ff0000", "Hex convertion failed")
		end)
		test("convert from short hex", function()
			local red = vmath.vector4(1, 0, 0, 1)
			local red_hex = color.from_hex("#f00")
			assert(red == red_hex, "Hex convertion failed")
		end)

		test("convert from hex no hash", function()
			local red = vmath.vector4(1, 0, 0, 1)
			local red_hex = color.from_hex("ff0000")
			assert(red == red_hex, "Hex convertion failed")
		end)
		
		test("convert from short hex no hash", function()
			local red = vmath.vector4(1, 0, 0, 1)
			local red_hex = color.from_hex("f00")
			assert(red == red_hex, "Hex convertion failed")
		end)
	end)
	describe("Table Tests", function()
		test("convert from table", function()
			local red = vmath.vector4(1, 0, 0, 1)
			local red_tbl = color.from_table({1, 0, 0})
			assert(red == red_tbl, "Table convertion failed")
		end)
		
		test("convert from table with alpha", function()
			local red = vmath.vector4(1, 0, 0, 1)
			local red_tbl = color.from_table({1, 0, 0, 1})
			assert(red == red_tbl, "Table convertion failed")
		end)
		
		test("convert from table 255", function()
			local red = vmath.vector4(1, 0, 0, 1)
			local red_tbl = color.from_table_255({255, 0, 0}, true)
			assert(red == red_tbl, "Table convertion failed")
		end)
		
	end)
	describe("HSV Tests", function()
		test("convert from hsv", function()
			local red = vmath.vector4(1, 0, 0, 1)
			local blue = vmath.vector4(0, 0, 1, 1)
			local red_hsv = color.from_hsv(0, 1, 1)
			local blue_hsv = color.from_hsv(240, 1, 1)
			assert(red == red_hsv, "Red HSV convertion failed")
			assert(blue == blue_hsv, "Blue HSV convertion failed")
		end)

		test("convert to hsv", function()
			local red_hsv = color.from_hsv(0, 1, 1)
			local h, s, v = color.to_hsv(red_hsv)
			assert(h == 0, "red h, from color to HSV convertion failed")
			assert(s == 1, "red s, from color to HSV convertion failed")
			assert(v == 1, "red v, from color to HSV convertion failed")
			
			local blue_hsv = color.from_hsv(240, 1, 1)
			local h, s, v = color.to_hsv(blue_hsv)
			assert(h == 240, "blue h, from color to HSV convertion failed")
			assert(s == 1, "blue s, from color to HSV convertion failed")
			assert(v == 1, "blue v, from color to HSV convertion failed")
		end)
	end)
	describe("Color shift tests", function()
		test("rotate color 50% around the color wheel", function()
			assert(color.shift(vmath.vector4(1, 0, 0, 1), 0.5) == vmath.vector4(0, 1, 1, 1))
		end)
		test("rotate color 25% around the color wheel", function()
			assert(color.shift(vmath.vector4(1, 0, 0, 1), 0.25) == vmath.vector4(0.5, 1, 0, 1))
		end)
	end)
end
